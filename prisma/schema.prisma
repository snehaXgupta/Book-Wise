generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Genre {
  id    String @id @default(cuid())
  name  String @unique
  books Book[]
}

model Book {
  id          String  @id @default(cuid())
  title       String @unique 
  author      String
  description String
  coverUrl    String?
  rating      Float?
  genreId     String
  readCount   Int     @default(0)
  genre       Genre   @relation(fields: [genreId], references: [id])
  quotes      Quote[]
}

model Quote {
  id     String @id @default(cuid())
  text   String @unique
  author String
  bookId String
  book   Book   @relation(fields: [bookId], references: [id])
}

model Account {
  id             String    @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  Account        Account[]
  Session        Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
